// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 1 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Users\Tamas\source\repos\BME-MIT-IET\iet-hf2021-sparba-qlene-sietni\BenchmarkRunner\bin\Release\netcoreapp3.1\a9d7a767-00db-4303-82f9-d7d49b2f62f4
// command took 1,98s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in F:\Users\Tamas\source\repos\BME-MIT-IET\iet-hf2021-sparba-qlene-sietni\BenchmarkRunner\bin\Release\netcoreapp3.1\a9d7a767-00db-4303-82f9-d7d49b2f62f4
// command took 3,47s and exited with 0
// ***** Done, took 00:00:05 (5.55 sec)   *****
// Found 1 benchmarks:
//   Benchmark.initGraph: DefaultJob

// **************************
// Benchmark: Benchmark.initGraph: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "a9d7a767-00db-4303-82f9-d7d49b2f62f4.dll" --benchmarkName "RDFSharp.BenchmarkDotNet.Benchmark.initGraph" --job "Default" --benchmarkId 0 in F:\Users\Tamas\source\repos\BME-MIT-IET\iet-hf2021-sparba-qlene-sietni\BenchmarkRunner\bin\Release\netcoreapp3.1\a9d7a767-00db-4303-82f9-d7d49b2f62f4\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.14 (CoreCLR 4.700.21.16201, CoreFX 4.700.21.16208), X64 RyuJIT
// GC=Concurrent Workstation
// Job: DefaultJob

OverheadJitting  1: 1 op, 288500.00 ns, 288.5000 us/op
WorkloadJitting  1: 1 op, 369800.00 ns, 369.8000 us/op

OverheadJitting  2: 16 op, 269100.00 ns, 16.8188 us/op
WorkloadJitting  2: 16 op, 392400.00 ns, 24.5250 us/op

WorkloadPilot    1: 16 op, 6600.00 ns, 412.5000 ns/op
WorkloadPilot    2: 32 op, 6900.00 ns, 215.6250 ns/op
WorkloadPilot    3: 64 op, 12500.00 ns, 195.3125 ns/op
WorkloadPilot    4: 128 op, 27300.00 ns, 213.2812 ns/op
WorkloadPilot    5: 256 op, 41100.00 ns, 160.5469 ns/op
WorkloadPilot    6: 512 op, 124400.00 ns, 242.9687 ns/op
WorkloadPilot    7: 1024 op, 269700.00 ns, 263.3789 ns/op
WorkloadPilot    8: 2048 op, 418800.00 ns, 204.4922 ns/op
WorkloadPilot    9: 4096 op, 778800.00 ns, 190.1367 ns/op
WorkloadPilot   10: 8192 op, 1345800.00 ns, 164.2822 ns/op
WorkloadPilot   11: 16384 op, 2878800.00 ns, 175.7080 ns/op
WorkloadPilot   12: 32768 op, 5398300.00 ns, 164.7430 ns/op
WorkloadPilot   13: 65536 op, 8804700.00 ns, 134.3491 ns/op
WorkloadPilot   14: 131072 op, 19491800.00 ns, 148.7106 ns/op
WorkloadPilot   15: 262144 op, 37552400.00 ns, 143.2510 ns/op
WorkloadPilot   16: 524288 op, 79079900.00 ns, 150.8329 ns/op
WorkloadPilot   17: 1048576 op, 133992400.00 ns, 127.7851 ns/op
WorkloadPilot   18: 2097152 op, 172379100.00 ns, 82.1968 ns/op
WorkloadPilot   19: 4194304 op, 346006500.00 ns, 82.4944 ns/op
WorkloadPilot   20: 8388608 op, 705444700.00 ns, 84.0956 ns/op

OverheadWarmup   1: 8388608 op, 15835500.00 ns, 1.8877 ns/op
OverheadWarmup   2: 8388608 op, 16128900.00 ns, 1.9227 ns/op
OverheadWarmup   3: 8388608 op, 16153800.00 ns, 1.9257 ns/op
OverheadWarmup   4: 8388608 op, 16003800.00 ns, 1.9078 ns/op
OverheadWarmup   5: 8388608 op, 15877700.00 ns, 1.8928 ns/op
OverheadWarmup   6: 8388608 op, 15947000.00 ns, 1.9010 ns/op
OverheadWarmup   7: 8388608 op, 16017800.00 ns, 1.9095 ns/op
OverheadWarmup   8: 8388608 op, 15814300.00 ns, 1.8852 ns/op

OverheadActual   1: 8388608 op, 15850400.00 ns, 1.8895 ns/op
OverheadActual   2: 8388608 op, 15749800.00 ns, 1.8775 ns/op
OverheadActual   3: 8388608 op, 15965900.00 ns, 1.9033 ns/op
OverheadActual   4: 8388608 op, 15951500.00 ns, 1.9016 ns/op
OverheadActual   5: 8388608 op, 15743300.00 ns, 1.8767 ns/op
OverheadActual   6: 8388608 op, 15761900.00 ns, 1.8790 ns/op
OverheadActual   7: 8388608 op, 16178400.00 ns, 1.9286 ns/op
OverheadActual   8: 8388608 op, 15796000.00 ns, 1.8830 ns/op
OverheadActual   9: 8388608 op, 15823800.00 ns, 1.8863 ns/op
OverheadActual  10: 8388608 op, 15815200.00 ns, 1.8853 ns/op
OverheadActual  11: 8388608 op, 15798700.00 ns, 1.8834 ns/op
OverheadActual  12: 8388608 op, 14038500.00 ns, 1.6735 ns/op
OverheadActual  13: 8388608 op, 14032400.00 ns, 1.6728 ns/op
OverheadActual  14: 8388608 op, 14362900.00 ns, 1.7122 ns/op
OverheadActual  15: 8388608 op, 14373800.00 ns, 1.7135 ns/op
OverheadActual  16: 8388608 op, 14061600.00 ns, 1.6763 ns/op
OverheadActual  17: 8388608 op, 14066500.00 ns, 1.6769 ns/op
OverheadActual  18: 8388608 op, 14055900.00 ns, 1.6756 ns/op
OverheadActual  19: 8388608 op, 14040800.00 ns, 1.6738 ns/op
OverheadActual  20: 8388608 op, 14060800.00 ns, 1.6762 ns/op

WorkloadWarmup   1: 8388608 op, 707635400.00 ns, 84.3567 ns/op
WorkloadWarmup   2: 8388608 op, 697148600.00 ns, 83.1066 ns/op
WorkloadWarmup   3: 8388608 op, 693853300.00 ns, 82.7138 ns/op
WorkloadWarmup   4: 8388608 op, 704254800.00 ns, 83.9537 ns/op
WorkloadWarmup   5: 8388608 op, 708782300.00 ns, 84.4934 ns/op
WorkloadWarmup   6: 8388608 op, 715005400.00 ns, 85.2353 ns/op
WorkloadWarmup   7: 8388608 op, 706574800.00 ns, 84.2303 ns/op
WorkloadWarmup   8: 8388608 op, 695115500.00 ns, 82.8642 ns/op
WorkloadWarmup   9: 8388608 op, 701823900.00 ns, 83.6639 ns/op
WorkloadWarmup  10: 8388608 op, 694288500.00 ns, 82.7656 ns/op

// BeforeActualRun
WorkloadActual   1: 8388608 op, 692985900.00 ns, 82.6104 ns/op
WorkloadActual   2: 8388608 op, 686975900.00 ns, 81.8939 ns/op
WorkloadActual   3: 8388608 op, 750627400.00 ns, 89.4818 ns/op
WorkloadActual   4: 8388608 op, 690154700.00 ns, 82.2729 ns/op
WorkloadActual   5: 8388608 op, 703998600.00 ns, 83.9232 ns/op
WorkloadActual   6: 8388608 op, 729046700.00 ns, 86.9091 ns/op
WorkloadActual   7: 8388608 op, 691766300.00 ns, 82.4650 ns/op
WorkloadActual   8: 8388608 op, 687893700.00 ns, 82.0033 ns/op
WorkloadActual   9: 8388608 op, 695427400.00 ns, 82.9014 ns/op
WorkloadActual  10: 8388608 op, 714485600.00 ns, 85.1733 ns/op
WorkloadActual  11: 8388608 op, 690397500.00 ns, 82.3018 ns/op
WorkloadActual  12: 8388608 op, 700224600.00 ns, 83.4733 ns/op
WorkloadActual  13: 8388608 op, 707440000.00 ns, 84.3334 ns/op
WorkloadActual  14: 8388608 op, 707873200.00 ns, 84.3851 ns/op
WorkloadActual  15: 8388608 op, 699103700.00 ns, 83.3397 ns/op

// AfterActualRun
WorkloadResult   1: 8388608 op, 677239350.00 ns, 80.7332 ns/op
WorkloadResult   2: 8388608 op, 671229350.00 ns, 80.0168 ns/op
WorkloadResult   3: 8388608 op, 674408150.00 ns, 80.3957 ns/op
WorkloadResult   4: 8388608 op, 688252050.00 ns, 82.0460 ns/op
WorkloadResult   5: 8388608 op, 713300150.00 ns, 85.0320 ns/op
WorkloadResult   6: 8388608 op, 676019750.00 ns, 80.5878 ns/op
WorkloadResult   7: 8388608 op, 672147150.00 ns, 80.1262 ns/op
WorkloadResult   8: 8388608 op, 679680850.00 ns, 81.0243 ns/op
WorkloadResult   9: 8388608 op, 698739050.00 ns, 83.2962 ns/op
WorkloadResult  10: 8388608 op, 674650950.00 ns, 80.4247 ns/op
WorkloadResult  11: 8388608 op, 684478050.00 ns, 81.5961 ns/op
WorkloadResult  12: 8388608 op, 691693450.00 ns, 82.4563 ns/op
WorkloadResult  13: 8388608 op, 692126650.00 ns, 82.5079 ns/op
WorkloadResult  14: 8388608 op, 683357150.00 ns, 81.4625 ns/op
GC:  1797 0 0 3758096384 8388608
Threading:  2 0 8388608

// AfterAll
// Benchmark Process 15568 has exited with code 0

Mean = 81.550 ns, StdErr = 0.378 ns (0.46%), N = 14, StdDev = 1.415 ns
Min = 80.017 ns, Q1 = 80.465 ns, Median = 81.243 ns, Q3 = 82.354 ns, Max = 85.032 ns
IQR = 1.888 ns, LowerFence = 77.633 ns, UpperFence = 85.186 ns
ConfidenceInterval = [79.955 ns; 83.146 ns] (CI 99.9%), Margin = 1.596 ns (1.96% of Mean)
Skewness = 0.96, Kurtosis = 3.07, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\RDFSharp.BenchmarkDotNet.Benchmark-report.csv
  BenchmarkDotNet.Artifacts\results\RDFSharp.BenchmarkDotNet.Benchmark-report-github.md
  BenchmarkDotNet.Artifacts\results\RDFSharp.BenchmarkDotNet.Benchmark-report.html
  BenchmarkDotNet.Artifacts\results\RDFSharp.BenchmarkDotNet.Benchmark-report-default.md

// * Detailed results *
Benchmark.initGraph: DefaultJob
Runtime = .NET Core 3.1.14 (CoreCLR 4.700.21.16201, CoreFX 4.700.21.16208), X64 RyuJIT; GC = Concurrent Workstation
Mean = 81.550 ns, StdErr = 0.378 ns (0.46%), N = 14, StdDev = 1.415 ns
Min = 80.017 ns, Q1 = 80.465 ns, Median = 81.243 ns, Q3 = 82.354 ns, Max = 85.032 ns
IQR = 1.888 ns, LowerFence = 77.633 ns, UpperFence = 85.186 ns
ConfidenceInterval = [79.955 ns; 83.146 ns] (CI 99.9%), Margin = 1.596 ns (1.96% of Mean)
Skewness = 0.96, Kurtosis = 3.07, MValue = 2
-------------------- Histogram --------------------
[79.932 ns ; 82.873 ns) | @@@@@@@@@@@@
[82.873 ns ; 85.803 ns) | @@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19042
AMD Ryzen 5 3400G with Radeon Vega Graphics, 1 CPU, 8 logical and 4 physical cores
.NET Core SDK=5.0.202
  [Host]     : .NET Core 3.1.14 (CoreCLR 4.700.21.16201, CoreFX 4.700.21.16208), X64 RyuJIT
  DefaultJob : .NET Core 3.1.14 (CoreCLR 4.700.21.16201, CoreFX 4.700.21.16208), X64 RyuJIT


|    Method |     Mean |    Error |   StdDev | Rank |  Gen 0 | Gen 1 | Gen 2 | Allocated |
|---------- |---------:|---------:|---------:|-----:|-------:|------:|------:|----------:|
| initGraph | 81.55 ns | 1.596 ns | 1.415 ns |    1 | 0.2142 |     - |     - |     448 B |

// * Hints *
Outliers
  Benchmark.initGraph: Default -> 1 outlier  was  removed (89.48 ns)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen 0     : GC Generation 0 collects per 1000 operations
  Gen 1     : GC Generation 1 collects per 1000 operations
  Gen 2     : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ns      : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:21 (21.52 sec), executed benchmarks: 1

Global total time: 00:00:27 (27.08 sec), executed benchmarks: 1
// * Artifacts cleanup *
